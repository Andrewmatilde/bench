openapi: "3.0.3"
info:
  title: Bench Server - 时序数据存储系统 API
  version: "1.0.0"
  description: >-
    基于Go语言实现的高性能时序数据存储HTTP服务器API文档。
    
    本系统支持传感器数据上报、读写操作、批量处理等功能，
    所有数据最终持久化至MySQL作为时序数据库。
    
    ## 功能特性
    - 传感器数据上报
    - 传感器数据读写操作（支持事务）
    - 批量传感器数据读写操作
    - 系统统计信息查询
    - 健康检查
    
    ## 阈值监控
    系统会自动监控传感器数值，当数值超过100时：
    - 自动提升优先级为1（高优先级）
    - 记录告警信息
    - 更新设备状态表
  contact:
    name: API支持
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: 开发环境服务器
  - url: https://api.example.com
    description: 生产环境服务器

security: []

tags:
  - name: health
    description: 健康检查相关接口
  - name: sensor
    description: 传感器数据相关接口
  - name: stats
    description: 统计信息相关接口

paths:
  /health:
    get:
      tags:
        - health
      operationId: healthCheck
      summary: 健康检查
      description: 检查服务器和数据库连接状态
      responses:
        '200':
          description: 服务器健康
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              example:
                status: "healthy"
                time: "2024-01-01T10:00:00Z"
        '503':
          description: 服务不可用
          content:
            text/plain:
              schema:
                type: string
              example: "Database connection failed"

  /api/sensor-data:
    post:
      tags:
        - sensor
      operationId: uploadSensorData
      summary: 传感器数据上报
      description: 上报单个传感器数据到时序数据库
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensorData'
            example:
              timestamp: "2024-01-01T10:00:00Z"
              device_id: "factory_001_device_001"
              metric_name: "temperature"
              value: 23.5
              priority: 1
      responses:
        '200':
          description: 数据上报成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                status: "success"
                message: "Data inserted successfully"
        '400':
          description: 请求参数错误
          content:
            text/plain:
              schema:
                type: string
              examples:
                missing_fields:
                  value: "Missing required fields"
                invalid_json:
                  value: "Invalid JSON format"
        '405':
          description: 方法不允许
          content:
            text/plain:
              schema:
                type: string
              example: "Only POST method allowed"
        '500':
          description: 数据库错误
          content:
            text/plain:
              schema:
                type: string
              example: "Database error"

  /api/stats:
    get:
      tags:
        - stats
      operationId: getStats
      summary: 获取系统统计信息
      description: 获取数据库中的统计信息，包括总记录数、按优先级统计、最近24小时数据量等
      responses:
        '200':
          description: 统计信息获取成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsResponse'
              example:
                total_records: 1500000
                priority_stats:
                  1: 50000
                  2: 1200000
                  3: 250000
                recent_24h_count: 86400
        '500':
          description: 数据库错误

components:
  schemas:
    SensorData:
      type: object
      required:
        - timestamp
        - device_id
        - metric_name
        - value
      properties:
        timestamp:
          type: string
          format: date-time
          description: 传感器数据时间戳（RFC3339格式）
          example: "2024-01-01T10:00:00Z"
        device_id:
          type: string
          description: 设备唯一标识符
          example: "factory_001_device_001"
          maxLength: 100
        metric_name:
          type: string
          description: 指标名称
          example: "temperature"
          maxLength: 50
          enum:
            - "temperature"
            - "pressure"
            - "humidity"
            - "vibration"
            - "voltage"
            - "current"
            - "power"
            - "flow_rate"
        value:
          type: number
          format: double
          description: 传感器数值
          example: 23.5
        priority:
          type: integer
          description: 优先级（1:高 2:中 3:低）
          example: 1
          minimum: 1
          maximum: 3
          default: 2
        data:
          type: string
          description: 随机负载数据，用于增大传输量进行压测
          example: "eyJsb2FkIjpbMSwyLDMsNF0sInRpbWVzdGFtcCI6IjIwMjQtMDEtMDFUMTA6MDA6MDBaIiwic2l6ZSI6MTAyNCwicmFuZG9tIjoiYWJjZGVmZ2hpams="
          maxLength: 65535

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          description: 健康状态
          example: "healthy"
        time:
          type: string
          format: date-time
          description: 当前时间
          example: "2024-01-01T10:00:00Z"

    SuccessResponse:
      type: object
      properties:
        status:
          type: string
          description: 操作状态
          example: "success"
        message:
          type: string
          description: 操作信息
          example: "Data inserted successfully"

    StatsResponse:
      type: object
      properties:
        total_records:
          type: integer
          format: int64
          description: 总记录数
          example: 1500000
        priority_stats:
          type: object
          description: 按优先级统计
          additionalProperties:
            type: integer
            format: int64
          example:
            1: 50000
            2: 1200000
            3: 250000
        recent_24h_count:
          type: integer
          format: int64
          description: 最近24小时数据量
          example: 86400

    Error:
      type: object
      properties:
        error:
          type: string
          description: 错误信息
        code:
          type: integer
          description: 错误代码
        message:
          type: string
          description: 详细错误信息 